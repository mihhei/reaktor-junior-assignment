{"version":3,"sources":["hooks/http.hook.js","components/loader.js","components/info.js","components/getupdate.js","components/outputlist.js","components/dataoutput.js","components/navbar.js","App.js","routes.js","reportWebVitals.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","Loader","style","display","justifyContent","paddingTop","className","Info","manufacturer","info","setInfo","getInfo","str","key","find","item","id","toLowerCase","instock","DATAPAYLOAD","substring","lastIndexOf","length","useEffect","GetUpdate","lastDate","update","setUpdate","checkHandler","setInterval","opacity","visibility","OutputList","reload","toUpperCase","onClick","bind","items","map","index","name","price","manufacturers","DataOutput","actualItem","setActualItem","setData","serverError","setServerError","fetched","fetchedParse","parse","Object","keys","Navbar","class","padding","to","App","routes","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81395b48.chunk.js","sourcesContent":["import {useState, useCallback} from 'react';\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n        setLoading(true);\r\n        try {\r\n\r\n        if (body) {\r\n            body = JSON.stringify(body);\r\n            headers['Content-Type']='application/json'\r\n        }\r\n            const response = await fetch(url, {method, body, headers});\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.message || 'Somthing wrong!') \r\n            }\r\n\r\n            setLoading(false);\r\n\r\n            return data;\r\n\r\n        } catch (e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n\r\n        }\r\n\r\n    }, [])\r\n    const clearError = useCallback(()=>{\r\n        setError(null);\r\n    }, []);\r\n\r\n    return { loading, request, error, clearError}\r\n}","import React from 'react';\r\n\r\nexport const Loader = () => {\r\n    return (\r\n    <div style={{display:'flex', justifyContent:'center', paddingTop:'2rem'}}>\r\n      <div className=\"preloader-wrapper active\">\r\n        <div className=\"spinner-layer spinner-blue-only\">\r\n          <div className=\"circle-clipper left\">\r\n            <div className=\"circle\"/>\r\n          </div>\r\n          <div className=\"gap-patch\">\r\n            <div className=\"circle\"/>\r\n          </div>\r\n          <div className=\"circle-clipper right\">\r\n            <div className=\"circle\"/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n","import React, {useState, useCallback, useEffect} from 'react';\r\n\r\n\r\nexport const Info = ({data, manufacturer}) => {\r\n\r\n  const [info, setInfo] = useState('in progress');\r\n\r\n  const getXmlValue = function(str, key) {\r\n    return str.substring(\r\n      str.lastIndexOf('<' + key + '>') + ('<' + key + '>').length,\r\n      str.lastIndexOf('</' + key + '>')\r\n    )\r\n  }\r\n\r\n  const getInfo = useCallback(()=> {\r\n    const find = manufacturer.find(item => item.id.toLowerCase() === data)\r\n  if (find){\r\n    const instock = getXmlValue(find.DATAPAYLOAD.toLowerCase(), 'instockvalue');\r\n    setInfo(instock);\r\n  } else {\r\n    setInfo('no data');\r\n  }\r\n  },[data, manufacturer]);\r\n    \r\n\r\n  useEffect( () => {\r\n    getInfo()\r\n  }, [getInfo]);\r\n\r\n\r\n  return <div>{info}</div>\r\n}\r\n","import React, {useState, useEffect, useCallback} from 'react';\r\nimport {useHttp} from '../hooks/http.hook';\r\n\r\n\r\nexport const GetUpdate = ({lastDate}) => {\r\n    const {request} = useHttp();\r\n    const [update, setUpdate] = useState('');\r\n\r\n    const checkHandler = useCallback (async () => {\r\n        try {\r\n            const fetched = await request('/update', 'GET', null);\r\n            if (fetched !== lastDate) {\r\n                setUpdate('update available');\r\n            }\r\n            \r\n           } catch (e) {\r\n               setUpdate('server no answer')\r\n           }\r\n\r\n        }, [request, setUpdate, lastDate]);\r\n\r\n    useEffect( () => {\r\n            setInterval(checkHandler, 30000);\r\n        }, [checkHandler]);\r\n\r\n    if (update){\r\n        return <div style={{opacity: '0.6'}}>{update}</div>\r\n    } \r\n\r\n        \r\n    return <div style={{visibility: 'hidden'}}>update available</div>\r\n    \r\n}\r\n","import React from 'react';\r\nimport {Info} from '../components/info';\r\nimport {GetUpdate} from '../components/getupdate';\r\n\r\n\r\nexport const OutputList = ({data, item, reload}) => {\r\n\r\nreturn (\r\n    <>\r\n    <table>\r\n        <thead>\r\n            <tr>\r\n                <th>{item.toUpperCase()}</th>\r\n                <th>Last update {data.update}</th>\r\n                <th><GetUpdate lastDate = {data.update}/></th>\r\n                <th><button className=\"btn grey lighten-1 black-text\" \r\n                    onClick={reload.bind(null)}>Reload</button></th>\r\n            </tr>\r\n        </thead>\r\n    </table>\r\n    <table>\r\n        <thead>\r\n            <tr>\r\n                <th>#</th>\r\n                <th>Name</th>\r\n                <th>Price</th>\r\n                <th>Manufacturer</th>\r\n                <th>Info</th>\r\n            </tr>\r\n        </thead>\r\n\r\n    <tbody>\r\n        {data.items[item].map((item, index) => {\r\n            return (\r\n                <tr key={item.id}>\r\n            <td>{index + 1}</td>\r\n            <td>{item.name}</td>\r\n            <td>{item.price}</td>\r\n            <td>{item.manufacturer}</td>\r\n            <td><Info data={item.id} manufacturer={data.manufacturers[item.manufacturer]}/></td>\r\n            </tr>\r\n            )\r\n        })}\r\n    </tbody>\r\n    </table>\r\n    </>\r\n)\r\n}","import React, {useState, useCallback, useEffect} from 'react';\r\nimport {useHttp} from '../hooks/http.hook';\r\nimport {Loader} from '../components/loader';\r\nimport {OutputList} from './outputlist';\r\n\r\n\r\nexport const DataOutput = ({item}) => {\r\n  const [actualItem, setActualItem] = useState();\r\n  const [data, setData] = useState({});\r\n  const [serverError, setServerError] = useState('');\r\n  const {request} = useHttp();\r\n\r\n  const fetch = useCallback (async () => {\r\n    try {\r\n      const fetched = await request('/data', 'GET', null);\r\n      const fetchedParse = JSON.parse(fetched);\r\n      if (!Object.keys(fetchedParse).length || !Object.keys(fetchedParse.items).length || \r\n          !Object.keys(fetchedParse.manufacturers).length){\r\n            setServerError('incorrect data from server');\r\n      } else {\r\n      setData(fetchedParse);\r\n      }\r\n \r\n     } catch (e) {\r\n         setServerError('server no answer');\r\n     }\r\n  }, [request]);\r\n\r\n  \r\n  useEffect( () => {\r\n    fetch();\r\n    setActualItem(item);\r\n    return () => {\r\n      setData({});\r\n    }\r\n    \r\n  }, [fetch, item]);\r\n\r\n  const getNewData = () => {\r\n      setData({});\r\n      fetch();\r\n  }\r\n  const reload = () => {\r\n    setServerError('');\r\n    fetch();\r\n  }\r\n\r\n  if (serverError) {\r\n    return (\r\n      <div className=\"center\">\r\n        <div>{serverError}</div>\r\n        <button className=\"btn grey lighten-1 black-text\" onClick={reload}>Reload</button>\r\n      </div>\r\n      )\r\n  }\r\n\r\n  if (!Object.keys(data).length) {\r\n    return <Loader />\r\n  }\r\n\r\n  return <OutputList data = {data} item = {actualItem} reload={getNewData}/>\r\n}\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n      <div class=\"navbar-fixed\">\r\n        <nav>\r\n          <div class=\"nav-wrapper blue darken-1\" style={{padding: '0 2rem'}}>\r\n            <span class=\"brand-logo\">Your Clothes Inc</span>\r\n            <ul id=\"nav-mobile\" class=\"right hide-on-med-and-down\">\r\n              <li><NavLink to=\"/beanies\">Beanies</NavLink></li>\r\n              <li><NavLink to=\"/gloves\">Gloves</NavLink></li>\r\n              <li><NavLink to=\"/facemasks\">Facemasks</NavLink></li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport { useRoutes } from './routes';\nimport 'materialize-css';\nimport { Navbar } from './components/navbar';\n\nfunction App() {\n  const routes = useRoutes();\n  \n  return (\n    <Router>\n      <Navbar/>\n    <div className=\"container\">\n      {routes}\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { DataOutput } from './components/dataoutput';\r\n\r\nexport const useRoutes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/facemasks\" exact>\r\n                <DataOutput item='facemasks'/>\r\n            </Route>\r\n            <Route path=\"/gloves\" exact>\r\n                <DataOutput item='gloves'/>\r\n            </Route>\r\n            <Route path=\"/beanies\" exact>\r\n                <DataOutput item='beanies'/>\r\n            </Route>\r\n            <Redirect to=\"/\" />\r\n        </Switch>\r\n    )\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}